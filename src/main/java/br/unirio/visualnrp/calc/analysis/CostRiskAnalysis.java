package br.unirio.visualnrp.calc.analysis;

import br.unirio.visualnrp.algorithm.search.Solution;
import br.unirio.visualnrp.calc.fitness.CostRiskFitnessCalculator;
import br.unirio.visualnrp.model.Instance;
import br.unirio.visualnrp.model.MaximumValues;
import br.unirio.visualnrp.model.MaximumValuesList;
import br.unirio.visualnrp.model.Project;
import br.unirio.visualnrp.reader.MaximumValuesReader;
import br.unirio.visualnrp.reader.RequirementReader;

/**
 * Class that analizes the best solutions under the CRO-NRP formulation
 * 
 * @author Marcio
 */
public class CostRiskAnalysis
{
	/**
	 * Best solutions generated by ILS
	 */
	private static String[] ILS_CRO_INSTANCES =
	{
		// nrp1
		"[---SSS-SS-S-----SS-S----S-S---S--S--SS-S--S---S----S--------SS-SSS--S-SSS-S--S-S--S-SS-S-SS-S--S-S--]",
		"[---SSS-SS-S-----SS-S----S-S---S--S--SS-S--S---S----S--------SS-SSS--S-SSS-S--S-S--S-SS-S-SS-S--S-S--]",
		"[---SSS-SS------SSS-S----S-S---S--S--SS-S--S---S----S--------SS-SSS--S-SSS-S--S-S--S-SS-S-S--S--S-S--]",

		// nrp2
		"[S-S-S-SSS------SS----S-S-S---S-S--SSS---SS---S-S-SS-------SS----S-SS------------S---SS--S-S---S----------SS---S-------S----S--S---S-SS---S-----S-------S--S--S--S---S---S--S--SSS-S--SS-SS--SS--S---S----SS--S-----SS--SSS---SS----S--SS-S--SS---S-SSS------S-SSS---------S---S----SS-S--S-----SSSSS-S-----S--------S-S-SS-SSSS--SS--------SSS--S----S-S-S---S------S--SS-S-SS-----S--SS-S-SSS--SS--------SS--S-S---S-SSS---S------S--------SS----S-----S--S------SS-SS---S--------SSS---SS------S--------S-S-SS----]",
		"[S-S-S-SSS------S-S---S-S--SS-S-----S----SSS--S---S--------S----S--S--S----------S---SS-SS--S-------------SS-S-S-------S-S--S--SS--S-SS---S---SSS-----SSS--S--S--S--S-----S-S--SSS----SS-SS---S-SSSS-S---SSS--S---S--S----S---SS-S--SSS-S-S-SSS---S----S-------S-------S---S---S-----S---SS----SSSS-S-S---S-S--------S-S-SS--SSS---S-----S--SSSS-S----S-S-----S------S--SS-S-SS-----S--S-----SS-----S------SS--S-S--SS-SS----S-------S---S---SS----S-S-S-SS-S------SS-SSS-SS---------S---SS---------------S--SSSSSS--]",
		"[S-S-S-SSS------SS---SS-S--SS-S-S---S---SSSS--S-S--S-------S--S-S--S-------------S--SS---S-S---S-------S--SS-S-S-------S-S--S--S---SSSS---S----SS----SSSS--S--S--S--S-------S---SS---SSS-SS--S---SS--S--SSSS--S---S-SS--SSS---SS-S--S-S-S----SS---S---S---S----S-----------S---------S-S-SS----SSSS-S-S-----S--------S-S-SS-SSSS---S----------SS-S---SS-S-----S------S--SS-S-SS-----S--SS-----S---S--------SS--S-S--SS-S-----S------SS---S---SS----S---S-SS-S-------S-SS--SS---------S---SS---------------S--S-SSSS--]",

		// nrp3
		"[-SSS-SSS-S-S--S----S--SSSS-S---SS---SSS-S-S-S--SS---S-S-S---S--S----SS-S--S-S---S--S--S--S--SSSSS-S-S--SS-S--SSSSSS-S----S-S--SS-SSS-SS--SSSS---SSSS-S-SS-S-----S---S---SSSSS-S-SS-S-S-SSSS-S-----SS-S-SS-S---SS-SS--S---SS-S--S---S-S--S-SS-SSS--S--S---S-S-S--------SS-SS-S-SSSSS--S-----SS-S--S-S---S----S-SSS-S-SS-S---SS-SSSSSS----S-S--SS-S-S----S-SS---SS-----SS---S-SS-S--SS--SSSS--SSSSSS---S-SS---SS--S-SSS-SS-S--S-S--S---SSS---SS---SSSSS-SSSSS-SS-S-S-SS------S--SS-SS--S-S-S-SS-S-S-S-SS-S-SSSS---SSS-]",
		"[-SSS-SSS-S-S--S-S--S--SS-S-----SS---SS-SS-S-S---S---S-S-S------S-S--SS-S--S-S---S--S--S--SS-SSSS--S-S--SSSSS-SSSSS-------S-SS-SS-SSS-SS--SSSS---SSSS-S-SS-SS-S--S---S---SSSSS-SSSSSS-S-SSSS-S---S-SS-S-SS-S---SS-SS--S---SS----S---S-S--SSSS-SSS--S---S--S-S-S-SS-----SS-S----SSSS---S-----SS-SS-S-S-SSS----S-S-S---SS-S--SSS--SSS-S------S-SSS-S-S----S-SS---SS-----SS---S-SS-S--SSS-S-SS--SSSSSS---S--S----S----SSS-SS-SS-S-S--S----SS---SS----S-SS-SSSSSSSS-S-SSS--S----S---S-SS--S-S-S-SS-S-S-S-SS-S-SSSS---SSS-]",
		"[-SSSSSS--S-S--S-S--S--SS-S-----SS---SS--S-S-S---S-S-S-S-S------S-S--SS-S-SS-S---S--S-SS--S--SSSS--S-S--SSSS--SSSSSS------S-SS-SS-SSS-SS--SSSS---SSSS-S-SS-S-----S--SS---SSSSS-S-SS-S-S-SSSS-S----SSS-S-SS-S---SS-SS--S---SS----S-----S--S-SS-SS---S--SSSSS-S-S-S------SS-SS-S-SSSSS--SS----S--S-SS-SSS-S----S-S-S---SS-S--SSS--SSS--S---S-S--S--SS-----S-SS-S-SS----S-S-S-S-SS-S--SSS-S-SS--SSSSSS--SS-SS----S---SSSS-SS-S--S-S-SS---SSS-S-SS----S--S-SSSSS-SS-S---------S-S---SSSS--S-S-S-SS-S-S-S-SS-S---SS-S-SSS-]",

		// nrp4
		"[S-S--SS---S--S-----SS-SSS-S-SSSS-S---S--SSS-S-S-S-S--SS-S-S----S-SS-S-S-S---SS-S-SS-S--S--SS--SSS-S---S-SSS--SSSSSSS-S-S----S--SSS---SSSS---S--S-------S----S--S----SSSS--S-SSS-S--S--S--S-SSS-SS----S----SSSSSS-S-S--S-S-SSS-S---S-S----SSS--------SS-SSS-SS-S-SS-S-S--S-S-S-S-SS--SS-SS-SS-S-S----SSSS-----SSS---SS---SS----SS--SS-SSS-S-SSSSS-SSS-SSSS-S-SS------S----SS-SS-SS---S-S--S-SS--------SSS--SSSS-SS-S--S-SSSS-------SS-S-S-S-S-S-SS---S-S-S---SSS-SS-SS-----S-SSS---S-SSS-S---S--S--SS-SS-----S--SSS--S------S----S-SSS--S--S-S-----S-SS--S-SS-S-S-----S---SS--SSS-SSS--SSSS----S---SSS----S--S-SS-S---S-SSSSS-SSSS---S--SS-SS--S-S-S-SS--S---SS---SSS--S-S-S--SSSS----SSS----S---SSSSS---S----S-S---SSSSSS-S-S-SS-SSS-S-S--SSS---S----SSSSSSS-S----S-------SSS-]",
		"[S-S--SS---S--S-----SS-S-S-S-S-SS-S---S--SSS---S-S-S--SSSS-S----S-S--S-S-----SS---SSS-S-S--SS--SSS-SS-SS-SSS--SSSSSSS-S------S-SSS----SSSS---S--S-------S---SS--SS---SSSS--S-SSS-S--S--S--S-SSS-SS--S-S----SSSSSS---S----S-SSSSS---S-S----SS----SS---SS-SSS-SS-S-SS-S-SS-S-S------SS--S-SS-SS-S-----SSSSS--S--S-S--S------S----S-S-SS-SSS---S-SSS-SSS-SSSS-S-S-S-----S-----S-SS--S--S-S--SS-SS------SSSSS--SSSS-SS-S--S-SSS--------SS---S-S---SSSS---S--SS---SSS-SSSSS--S--S--SS---S-SSS-S------S--SS-SS--S--S---SS--S------S----SSSS---S--S-S-----S-SSS-S-SS-S-SS----S----SSS-SS-SSS--S-SS----S------S---SS-S-SS-S---S-SSSSS--SSS---S--SS-SS--S---S-SS--S-SSSS---SSSS-SSS-S--SSSSSS--SSS----S---SSSSS--SS------S----SSSSS-S-S-SS-SS--SSS--SSS---S-S--SSSSSSS-S----S-------SSS-]",
		"[S-S--SS---SS-S-----SS-SSS-S-SSS--S---S--SSS---S-S-S--S--S-S----S-SS-S-S-----S--S-SSSS-SS--SS--SSS-SSS-S-SSS--SSSSSSS-S------S--SS----SSSS---S--S-------S---SS--S----SS-S--S-SSS-S-----S--S-SSS-SS--S-S----SS-SSS---S--S-S-SSSSS---S-S----SSS---S----SS-SSS-SS-S-SS-S-S--S-S-S----SS--S-SS-SS-S-S---SSSSS-----SSS--S-----SS----SSSSSS-SSS--SS-SSS-SSS-SSSS-S-S-------S-----S-S---S--------S-SS------SSSSS--SSSS-SS-S--S-SSS--------SS-S-S-S---SSSS---S--SS---SSS-SSSS--S--SS--S----SSSSS-S---S--S--SS-SS--S--S---SS--S----S-S----SSSSS--S--S-S-----S-SS--S-SS-S-SS----S---SSSSSSS-SSS--SSSS----S---------SSS-S-SS-----S-SSSSS--SSS---S--SS-SS--S---S-SS----SSSS---SSS--S-S-S--SSSS-S--SSS-S--S---SSSSS---S------S----SSSSSSS-S-SS-SSS-SSS--SSS---S---SSS-SSSS-S----S-------SSS-]",

		// nrp5
		"[-SSS-SSS--S-SS-SSS---SSS-S-SSSS-S---SSSSSS--SSS-SSSSS-S-SSSS----SSS--S-SSSSSSSS-SSSSS---SS--S-S-SSS-SSSS-SSS-S---SSSSS-S-SSS---S-SSSS-S-SSS-S-S-SSSS-S-S-S-SSSSSSS-S----S-SSS-S-SS-SS-S---S--SSSSSSS---SS-SSSS-SSSSSSS--SSS-SSSSS-S-SS-S--SS-S-S-SSSSS-S-SSS-SS-S----SSS-SSS--S-SSS--SSSSSS-S-SSSS----S--SSSSSSSS---SS-S--S--SS---S-S-SSS-SSSSSSSSSS-SS-SSSSSSS-----SSS-SSS-S------SSS--S---S--S-S--SSSS-SS-S---S-SSSS-S--SS--SSSS--SSSSSSS--SSSSS-SSS-S-S-SSS---SSSS-SS-S-S-SS-SSS--S-SSSS-SSSSSS----SSSSSSSSS-S-SS--S-SS--S-SS-S--SS-SS-SS-SSSSSSSS-SS--SS--SS-SSS-SSSSS-SSSSSSS-SSS-SS-SS-S-S--------S--S-SS-S-SS-SS-SS-SSSS----SSS--SSSSSSS-SSSS-SSSS-SSS-S-SS-S--S-SSS-SSSS-----SS-SSS---S--S-SSS--S-SS-SS-SSS-SSS-SSSS----S-S--S-SS-SS-S-S--S-S-SSS----S--S--S--S-SSSSS--SS--SSSS-S-S-S---SSSSSSS-SSSSS-------S-S--SSS-S-S-SSSSSS-SSSS---SSSS-S-SSSS--S-S-S-SS-S-S-S-S--S--SS--SS-S-SSSSSSS---S-S--SSS-S----SSS-SSSSSS---SSS---SSS-SS-SSSS-S----S-SS---SSS-S----SS---S-S---S--SS-SSS--SS-SS----SSSSS-S-SSSS--S-S-S--SSS----SSSS--S]",
		"[-S-S-SSS--S-SS-SSS-S-SSSSSSSSSS-SS-SSSSSS---SS--SSSSS-S-SSSS--S-S-S--S-SSSSS-SS-SSSSS--SSS-S--SSSS---S---SSSSS---S-SSS---S-SS--S-SSSS-S-S-S--SS-SSSS-S-S---SSSSSSSSS----S-SSS--SSSS-S-SS--S--SSSS-SS---SS-SSSS-SSSSS-S-SSSS--SSSS-S-SS-S--SS-S-S-SSSS--S-SSS-SSSS-S--SS--SSS--S-SSS--SSS--S--SSSSS--S-S---S-SSSSSSSSSSSS------S---S-S-SS--SSS-SSSSSSSSS-SSS-SSS-S--SSSS-SSS-SS---S-SS-S-S-SSS--S-SSSSSSS-SS-S--SSSSSSSSS--SS---SSS-SSS-SS---S-SSSSS-SS---SSSSS---SSS-S-S-S---SS-SSSS-S-SSSS-SSSSSS----SSSSSSSSS---SS--S-SSS-S--S----SSSSS--S-SSSSSS-S--S--SS-SSS--SS-SSS-S-SSSSSSS-SSS-SSS-SS--S----SS--S--SSS--SS-S-SS-SS-SSSS----SSS--SS-SSS-SSSSS--SSS-SSS-S--S-S--S-SSSSSS-SSS-S-SSSSSS---S----SSS--S-SSSSSSSSS-SSS--SSS--SSS-S-SS-SS--SSS-S-SS-S-SSS--S-S----SS-S---SSSSS--S--SSSS-S-SS-SS-SSS-SSS-SSSSSSS--S-SS----SSS-S-S-SSSSSS-SSSS---SS-S-S--SSSSSSSS-S-SS-S-S-SSS--SS-SS--SS-S-SSSSS-S---S-S--S-S-S-S--SS--SS-SSS-S-SSS---SS-SSS-SSS-----SSS-SS--SS-S------S----S--S--S--SS-SSS-SSS-SS-S-SSSS-SSS-SSSS--S-S-S--SSS----S-SS--S]",
		"[-S-S-SSSS-S-SS-S-S-S-SSS-S-SSSS-SS--SSSSS---S---SSSSS-S-SSSS----SSS--S-SSSSS-S--SSSS---SSS--S-S-SS---S---SSS-S---SSSSS---SSSS--S-SSSS-S-SSS--SS--SSS-S-S----SSSSSSSS----SSSSS-S-SS--S-S---S--SSSS--SS--S--SSSS--S-SS-S-SS-S-SSSSS-S-SS-S--SS-S-S-SSSSS-S-SSS-SS-S--------SSS--S-SSS--SSS--S-S-SSSS----SS--SSSSSSS--SSS-S---S--S---S----S--SSSSSSS-SS-SS-SSSSSSSSS--SSSS-SSS-S----S-SS---S-S-S--S-S-SSSSS-SS-S-SSSSSSSSSS--SSS--SS--SSS-SSS---SS-SS-SSS---S-SSS--SSSS-S-S-S---SS-SSS--S-SSSS-SSSSSS----SSSSSSSSS-S-SS----S---S-SS-S--SS-SS--S-SSSSS--S--S--SS-SSS--SS-SSS-S--SSSSS--S---SS-SS-S-S----SS--S--SSS--SS-S-SS--S-S-SS----SSS--SS-SSSSSSSSS---SS-S-S-S-SS-S--S-S-S-SSSSS--S-SS-SSS---S----SSS--S-SSSSS-SSS-SSS--SSS---SS-SS-S-SS-SS---S-SS-S-SSS----S----S--S---SSSSS--S--SSSS-S--S--S-SSSSSSS-SSSSS--S-S--S----S-S-S-S-SS-SSS-SS-----S--S-S-SSSS-SSSS-S-SSSS-S-SS----S-S---SS-S-SSSSS-S--SS-S--SS--S----SS--SS-SSS-S-SSS---SS-SSS-SSSS-S--SS--SS---S-S-S-S--SS---S-----S--SS--SS-SSS--S----SSSSSSS-SSSS--S-S-S--SSS----SSS---S]"
	};

	/**
	 * Best solutions generated by VISILS
	 */
	private static String[] VISILS_CRO_INSTANCES =
	{
		// nrp1
		"[---SSS-SS-S-----SS-S----S-S---S--S--SS-S--S---S----S--------SS-SSS--S-SSS-S--S-S--S-SS-S-SS-S--S-S--]",
		"[---SSS-SS-S-----SS-S----S-S---S--S--SS-S--S---S----S--------SS-SSS--S-SSS-S--S-S--S-SS-S-SS-S--S-S--]",
		"[---SSS-SS------SSS-S----S-S---S--S--SS-S--S---S----S--------SS-SSS--S-SSS-S--S-S--S-SS-S-S--S--S-S--]",

		// nrp2
		"[S-S-S-SSS------S-----S-S-SSS-S-S---S-----SS--S---SS-------S--S-S--S-------------S--SSS-SS-----S----------SS---S-------S-S--S--S---S-SS---S-----S-----SSS--S--S--S--S-----S-S---SS-S--SS-SS--S---SS--S---SSS--S---S-SS----S---SS-S--S-S-S-S--SS---S-------S--S-SS----------S---S----SS---SS----SSSS-S-S--------------S-S-SS--SSS--SS-----S--SSSS-S----S-S-S---S------S--SS-S-SS--S--S--S--S-S-S------------SS--S-S--SS-SS----S-------S---SS--SSS---S-S---SS-S-------S-SSS-SS---------S---SS---------------SS-S-SSSS--]",
		"[S-S-S-SSS------S-S---S-S--SS-S-----S---SSSS--S----S-------S----S--S--S--------S-S---S--SS-------------S--SS-S-S--S---SS-S--S--SS--S-SS---S----SS--S-SSSS--S--S--S--S-----S-S---SS----S--SS-----SSSS-S---SSS--S---S--S----S---SS-S--S-S-S---SSS---SS-----------S-------S---S---------S---SS----SSS--S-S---S-S--------S-S-SS--SSS---S--------S-SS-S---SSSS-----S------S--SS-S-SS-----S--S------S---S-S------SS--S-S--SS-S-----S----S--S---S---SS----S-S-S-SS-S-------S-SSS-SS---------SS--SS---------------S--SSSSSS--]",
		"[S-S-S-SSS------SS---SS-S-SSS-S----SS----SSS--S---SS-------SS-S-S--S-------------S--SS---S-S-------S------SS-S-S-------S-S--S--S---S-SS---S----SS-----SSS--S--S--S--S-----S-S--SSS----SS-SS--S---SS--S--SSSS--S---S--S--S-S---SS-S--S-S-S----SS---S---S---S----S---------------------S---SS----SS-S-S-S-----S--------S-S-SS-SSSS---S--------SSSS-S---SS-S-----S------S--SS-S--S-----S--S------S---S--------SS--S-S--SS-S-----S------SS---S---SSS---S---S-SS-S------SS-SSS-SS---------SSS-SS---------------S--S-SSSS--]",

		// nrp3
		"[-SSS-SS--S-S--S-S--S--SSSSSS---SS---SSS-S-S-S--SS---S-S-S----S-S----SS-S--S-S---S----SS--SS-SSSS--S----S-S---SSSSSS-S----S-SSSSS-SSS-SSS-S-SS---SSSS-S-SS-SS----S-S-S---SSSSS-S-SSSS-S-SSSSSS----SSS-S-SS-S---SS-SS--S------S--S-----S--S--S-SSSS-S---S--S-S-S--------SS-SS--SSSSSS--S-----SS-SS-S-SS-SS----S-SSS-S-SS-S---SS-SSSSS-------S-S----SS----S-SS---SS---S--S---S-SS-S--SSS-S-SS--SSSSSS---S--S---SS-SSSSSS-SS-S--S-S--S---SS--S--S--S-SSS--SSSSSSSS-S---SS------S---S-SS--S-S-S-SS-S-S-S-SS-S---SS-SSSSS-]",
		"[-SSS-SSS-S-S--S-S--S--SS-S-S---SS---SS--S-S-----S---S-S-S----S-S-S--SS-S--S-S---S--SSSS--SS-SSSS--S-S--S---S-SSSSSS-S----SSSS-SS-SSS-SSS-SSSS-S-SSSS-S-SS-S-----S---S---SSSSS-S-SS-S-S-SSSSSS---SSSS-S-SS-S---SS-SS--S---SS----S-----S--S-SS-SSSS-S--S---S--SS--------SS-SS---SSSSS--SS----SS-SS-SSSSSSS----S-S-S---SS----SSS-SSSS------S-S--S--SS-----S-SS---SS--S---S---S-SS-S--SS--S-SS--SSSSSS---S-SS--S-S-S--SSS-SS-SS-S-S--S---SSS-S-SS----SS-SSSSSSSSSS-S-S--S------S---S-SS----S-S-SS-S-S-S-SS-S-S-SS---SSS-]",
		"[-SSS-SS--S-S--S-S--S--SS-S-S---SS---SS--S-S-S---S---S-S-S------S----SS-S-SS-S---S--S--S--SS-SSSS--S-S--SSS-S-SSSS-S-S----S-SS-SS-SSS-SS--SSSS-S-SSSS-S-SS-S-----S---S---SSSSS-S-SS-S-S-SSSS-S---S-SS-S-SS-S---SSSSS--S---SS-S--S-----S--S--S-SSS--S--SS-SS-SSS-S------SS-SS-S-SSSSS--SS----SS-S-SS-S-S-S----S-S-S-S-SS-S--SSSS-SSS--S---S-S--S--S--S---S-SS-S-SS----S-S---S-SS-S--SSS-S-SS--SSSSSS---S-SS---SS----SSS-SS-SS-S-S--S---SS-----S----S----SSSSSSSS-S-S-S-----S-S---S-SS--S-S-S-SS-S-S-S-SS-S-S-SS-S-SSS-]",

		// nrp4
		"[S-S--SS---S--S-----SS-S-S-S-SSS--S-S-S--SSS---S-S-S---SSS-S----S-SS-S-S-----SS---SS-SS----SS--SSS-SS--S-SSS--SSSSSS--S------S--SS----SSSS-S-S--S-------S---SS--S----SSSS--S-SSS-S-----S--S-SSS-SS----S----SS-SSS---S----S-S-S-S---S-S----SSS---SS---SS-SSS-S--S-SS-S-SS-S-S-S----S--S--SS-SS-S-S---SSSS------SSS--SSS----S----SSS-SS-SSS-S-SSSSS-SSS-SSSS-S-SS------S----S--SS-SS--S--S--S-SS--------S-S--SSSS-SS-S--S-SSSS-------SS---S-S---SSSS---S---S---SSS-SSSSS-S---S-SSS---S-SSS-S---SS-S--SS-SS--S--S---SS--S----S-S----SSSS---S--S-S-----S-SS--S-SS-S-SS----S--SSSS--S--SSS--SSSS----S---SSS---SSS-S-SS-S---S-SSSSS--SSS---S--SSSSS--S-SSS-SS--S-SSSS---SSSS-S-S-S--SSSS----S-S----S---SSSSS---S----S-S----SSSSS-S-S-SS-SSS-SSS--SSS---S---SSSSSSSS-S----S-------SSS-]",
		"[S-S--SS---S--------SS-S-S-S--SSS-S---S--SSS---S-S----S--S-S----S-SS-S-S-----S----SSS-S-SS-SS--SSS-SS-SS-SSS--SSSSSSS-S-S----S--SS----SSSS-S-S--S--S----S----S--SS---SS-S--S-SSS-S--S--S-SS-SSSSSS--S-S----SSSSSS---S----S-SSSSS---S-S----SS----SS---SS-SSS-SS-S-SS-S-SS-S-S------SS--S-SS-SS-S-S---SSSSS-----SSS---------S----SS--SS-SSS-SSS-SSS-SSS-SSSS-S-S-------S-----S-SS--S--S-----S-SS--S---S-SSS--SSSS-S--S--S-SSS--------SS---S-S-S-SSSS---SS--S---SSS-SS-SS--S--S-SSS---S-SSS-S------S--SS-SS--S--S---SS--S------S-----SSSS--S--S-S-----S-SS--S-SS-S-SS-------SSSSS-SS-SSS--SSS-----S-----SS---S--S-SS-S---S--SSSS--SSS---S--SS-SS--S-SSS-SS--S-SSSS---SSSS-SSS-S--SSSS-S--SSS-S--S---SSS-S--SS----S-S----SSSSS-S-S-SS-SSS-S-S--SSS---S----SSSSSSS-S----S-------SSSS]",
		"[S-S--SS---SS-S-----SS-SSS-S-SSS--S-S-S--SSS---S-S-S--SS-S-S----S-SS-S-S-----S--S-SS-S-SS--SS--SSS-S-SSS-SSS--SSSSSSS-S------S--SS----SSSS---S--S--S----S---SS--S----SS-S--S-SSS-S--S--S--S-SSS-SS--S-S----SSSSSS---S--S-S-SSSSS---S-S----SSS----S---SS-SSS-SS-S-SS-S-SS-S-S-S-S--SS--S-SS-SS-S-S---SSSSS-----SSS--S------S----SSSSSS-SSS-SSS-SSS-SSS-SSSS-S-S-S-----S-----S-S---S--S--S-SS-SS--S---SSSSS--SSSS-SS-S--S-SSS---------S---S-S---SSSS---SS--S---SSS-SS-SS-S---S-SS----S-SSS-S---S--S--SS-SS-----S---SS--S----S-S----SSSSS--S--S-S-----S--S--S-SS-S-S-----S---SS-SSSS-SSS--SSSS----S-----S---SS--S-S------S-SSSSS--SSS---S--SS-SS--S---S-SS-----SSS----SS--S-S-S--SSSS-S---SS-S--S---SSSSS---S------S----SSSSS-S-S-SS-SSS-S-S--SSS---S-S-SSS-SSSS-S----S-------SSSS]",

		// nrp5
		"[SS-SSSSS-SS-SS-S-S-S-SSSSSSSSSS-S-SSSSSSSS--SS--SSS-S-S-SSSS--S-S-S--S-SSSSSSS--SSSSS--SSS-S--S-SSS-SS---SSS-S---SSSSS---SSSS--S-SSSS-SSSSSS--S-SSSS-S-S----SSSSSSSS----S-SSS---SS-SS-S---S--SSSS-SS---SS-SSSS--S-SS-S-SSSS-SSSSS-S-SS-SS-SS-S-S-SS-SSSS-SSS-SSSS-S-SSS--SSS--SSSSS--SSS--SSSSSSSS----S---SSSSSSS-SSSSSS--S--SS-S---S-SS--SSSSSSSSSS--S-SSSSS-S-S---SSS-SSS-SS-----SS---S-SSS--SSS-SSSSS-SSSS--SS-SSSSSS--SSS--SSS-SSS-SSS--S-SSSS-SSS-S-S--SS--SSSS-S-S-S---SS-SSSS-S-SS-S-SSSSSS----SSSSSSSSS-S-SSS---SSS-SS-S----SSSSS-SS-SSSSS--SSSS--SSSSSS-SSS-SSSSS-SS-SSSS-SSS-SS--S-S-S----SS--S--SSS--SS-S-SS--S--SSS----SSS--SS-SSSSSSSSS--SSS-SSS-S-SSSS--S-SSSSSS-S--S--S-SSSS---S--S-SSS--S-SSSSS-SSS-SSS--SSS--SSS-S--SSSS-SS-S-S-SS-S-SSS--S-S----SS-S---SS-SSS-S-SSSSS-S--S--S-SSSSSSS-SSSSS------SS----SSS-S-S-SSSSSS-SSS----SS-S-S--SSS--SSS-S-SS-S-S-S-----------SS---SSSSS-S-----S--S-S-S-SSSSSS-SS-SSS---SSSS--S-SSSS-SSS--SS-SSS-SS--SSSS------SS---S--S--S--SS--SS-SSS--SS--SSSS-SSS-SSSS--S-S-S--SSS--S-S-SS---]",
		"[-S-S-SSSS-S-SS-SSS-S-SSSSS-SSSS-SS-SSSSSSSS-SS--SSSSS-S-SSSS----SSS--S-SSSSSSSS-SSSSS--SSS-SS-S-SS---S---SSS-S---S-SSS---S-SS--S--SSS-S-SSSSSSS-SSSS-SSS---SSSSSSSSS----S-SSS-S-SSSSS-S---SS-SSSS-SSS--SS-SSSS--SSSSSS-SS-S-SSSSS-S-SS-S--SS-S-S-S-SSS-S-SSS-SSSS----SS--SSS--S-SSS--SSS--S-SSSSSS----SS--SSSSSSS-SSSS-S---S-SS-----S--S--SSS-SSSSSS-SS-SSSSSSS-S--SSSSSSSS-SS---S-SS-S-S-SSS--SSS-SSSSS-SSSS--SS-SSSS-S--SS-S-SSS-SSS-SSS---SSSSS--SS---SSSSS--SSSS-S-S-S---SS-SSSS-S-SSSS-SSSSSS----SSSSSSSSS-S-SS--S-SSS-S--S-S--SS-SS--S-SSSSSS-S--S--SS-SSS-SSS-SSS-S-SSS-SSS-SSS-SS--S-S-S---SSS--S---SS--SS-S-SS-SS-SSSS----SSS--SS-SSSSSSSSS--SSS-SSS-SS-S-S--S-SSS-SSSSS-SS-SSSSSS---S----SSS--S-SSSSSSSSS-SSS--SSS-S-SS-S--S-SSSSSSS-S----S-SSS----S----SS-S---SS-SS--S--SSSS-S--S--S-SSSSSSS-SSSSS--S---SS----SSS-S-S-SSSSSS-SSSS---SS-S-S-SSSS-SSSS-S-SS-S-S-S-S-----SS--SS---SSSSS-S-S-S-S--SSS-SS--SSS--SS-SSS-S-SSSSS-SS-SSS-SSSS-S--S-S-SS--SS-S-S----SS---S-----S-SSS-SSS-SSS-SS---SSSSSS-S-SSSS--S-S-S--SSS----SSSS--S]",
		"[-S-S-SSSS-S-SS-S-S-S-SSS-S-SSSS-SS--SSSSS---S---SSSSS-S-SSSS----SSS--S-SSSSS-S--SSSS---SSS--S-S-SS---S---SSS-S---SSSSS---S-SS--S-SSSS-S-SSS--SS--SSS-S-S----SSSSSSSS----SSSSS-S-SS--S-S---S--SSSS--SS--S--SSSS--S-SS-S-SS-S-SSSSS-S-SS-S--SS-S-S-SSSSS-S-SSS-SS-S--------SSS--S-SSS--SSS--S-S-SSSS----SS--SSSSSSS--SSS-S---S--S---S----S--SSS-SSS-SS-SS-SSSSSSSSS--SSSS-SSS-S----S-SS---S-S-S--S-S-SSSSS-SS-S-SSSSSSSSSS--SSS--SS--SSS-SSS---SS-SS--SS---S-SSS--SSSS-S-S-S---SS-SSS--S-SSSS-SSSSSS----SSSSSSSSS-S-SS----S---S-SS-S--SS-SS--S-SSSSS--S--S--SS-SSS--SS-SSS-S--SSSSS--S---SS-SS-S-S----SS--S--SSS--SS-S-SS--S-S-SS----SSS--SS-SSSSSSSSS---SS-S-S-S--S-S--S-S-S-SSSSS--S-SS-SSS---S----SSS--S-SSSSS-SSS-SSS--SSS---SS-SS-S-SS-SS---S-SS-S-SSS----S----S--S---SSSSS--S--SSSS-S--S--S-SSSSSSS-SSSSS--S-S--S----S-S-S-S-SS-SSS-SS-----S--S-S-SSSS-SSSS-S-SSSS-S-SS----S-S---SS-S-SSSSS-S--SS-S--SS--S----SS--SS-SSS-S-SSS---SS-SSS-SSSS-S--SS--SS---S-S-S-S--SS---S-----S--SS--SS-SSS--S----SSSSSSS-SSSS--S-S-S--SSS----SSS---S]"
	};

	/**
	 * Best solutions generated using profit-only optimization
	 */
	private static String[] OP_INSTANCES =
	{
		"[--SSSS-S--S-----SS---S-----S--SS-S---S----S---S----S----SS-SS-SSSS--SSSS--SS-S-S--S-SS-S-SS----S-S--]",
		"[S-S-S-SS-------SS----S-S-S-S-S-----S----SSS--S----S-------S--S--SSS-SS-----S-SS-----S---S-S-----------S--SS---S-------S-S--S--SS--SSSS---S----SS--S--S-S--S--S--S--S-------S---SS----SS-SS--S--SSS--S---SSS--S---S--S--S-S---SS-S--S--SS---SSS---SSS-----S----S-------S--SS---------SSS--S----SSSS-SSS-----S--------S-S-SS-S-S----S----S-----S--S----S-S-----S------S--SS-S-SS-----S--SS-----S--SS--------SS--S-S--SS-S-----S------SS---S---SSS---S-S-S--S-SS------S-SS--SS----S----S----S-------S-------S--SSSSS---]",
		"[-SSS--SS-S-S--S----S--SS-S-S---SSS--SS--S-S-S---S---S-S-S---S-SS----SS-S--S-S---S---SSS--SS-SSSSS-S----SSSS--SSSSSS-S----S-SS-SS-SSS-SSS-SSSS--SSSSS-S-SS-S-----S---S---SSSSS-S-SS-S-S-SSSS-S-----SS-S-SS-S---SS-SS--S---------S--SS-S--S-SS-SSS--S--SS----S-S--------SS-SS--SSSSSS--SS----SS-SS-S-SSS-S----S-S-S-S-SS-S---SS--SSSS-------SS-S----S----S-SS-S-SS-S---SS---S-SS-S--SSS-S-SS--SSSSSS---S-SS----S----SSS-SS-S--S-S--S---SSS-S-SS--SSS-SS-SSSSS-SS-S-S-S-------S---S--S--S-S-S-SS---S-S-SSSS-SSSS-SSSSS-]",
		"[S-S--SS---S--S-----SS--SS-S---SS-SS--S--SSS-S-S-S----SS-S-S-S--S-SSSS-S-----S----SS---S-S-SS--SSS-SS-SS-SSS--SSSS-SS-S----S-S--SS----SSSS---S--S--S----S---SS--SS----SSS--S-SSS-S-----S--SSSSS-SS--S-S----SSSSSS-S-S--S-S-S-SSS---S-S----SS---------SS-SSS-SS-S-SS-S-S--S-S-S----S---S-SS-SS-S-S---SSSSS-----SSS--S------S----SS--SS-SSSSS-S-SSS-SSS-SSSS-S-S----S--S-----S-S--SS---S----S-SS--S---S-SSS--SSSS-SS-S--S-SSS--------SS---S-S---S-SS---S---S---SSS-SSSSS-----S-SS---SS-SSS-S------S--SS-SSS-S--S---SS-SS------S----SSSS---S--S-S-----S-SS--S-SS-S-SS----S----SS-SS--SSS--SSSS----S-----S---SSS-S-SS-----S-SSSSS--SSS---S--SS-SS--S-SSS-SS---SS-SS---SSS--SSS-S--SSSSSS--S-S--------SSSSS--SS----S-S---SSSSSS-S-S-SS-SS--SSS--SSS---S----SSSSSSS-S----S--S----SSSS]",
		"[SSSS-SSSS-S-SS-S-S-S-SSSSSSSSSS-SS-SSSSSSS--S-SSSSS-S-S-SSSS--S-S-S-SS-SSSSSSS--SSSSS--SSSSS--S-SS---SS--SSS-S---S-SSS---SSSS--S-SSSS-S-SSSSS-S-SSSS-SSS----SSSSSSS-----S-S-S---SSSSS-----S-SSSSSSSS---SS-SSSS-SS-SSSS-SSSS-SSSSS-S-SS----SS-S-S-SS-S--S-SSS-SSSS-S-S-S----S--SSSSS---SSSSS-S-SS-S----S---SSSSSSSS-SSS-S--S-SSS-SS--S-SS--SSSSSSSSSS--S-SSSSSSS-S---SSS-SSS-S---SS-SS---S-SSS-SSSSSS-SSS-SSSS--SS-SSSSSS--SS--SSSS-SSSSSSSS-SSS-SS-SSS--SS-SSS--SSSS-S-S-S---SS-SSS--S-SSSS-SSSSSSS---SSSSSSSSS-S-SS-S--SS--S--S----SSSSS--S-SSSSSSSS-SS--SS-SSS--SS-SSSSS-SS--SSS-SS--SS--SSS-S-----S--S---SS--SS-S-SS--S-S-SS-S--SSS--SS-SSSSSSSSS--SSS-SSS-S-SS-S--S-SSSSSS-SSS---S--SSS---S--S-SSS--S-SSSSS-SSS-SSS--SSS----S-S--SSSS--SSS------S-SSS--SSS----SS-----SS-SS-SS--SSSSSS-SS--S-SSS-SSS-SSSSS------SS--S-SSS-S-S-SSS-SS-SSSSS--S-SS-S-SSSS--SSSSS-SS-S-S-SSS--SS-----SS---SSSSS-SSS---S--SSS-S-S-SSSSSSS-SSS---SSS---S--SSS-SS-S-S--SSS-SS---S-S------SS---S-SS--S--SS--SS-SSS--S---SSSS-SS--SSSS----S-S--SSS-S--S-SS---]"
	};

	/**
	 * Runs the analysis
	 */
	public void execute()
	{
		handleInstance(Instance.NRP1, 0);
		handleInstance(Instance.NRP2, 1);
		handleInstance(Instance.NRP3, 2);
		handleInstance(Instance.NRP4, 3);
		handleInstance(Instance.NRP5, 4);
	}
	
	/**
	 * Runs the analysis for all instances
	 */
	private void handleInstance(Instance instance, int opIndex)
	{
		int ocrIndex = opIndex * 3;
		handleInstance(instance, 30, 10, ILS_CRO_INSTANCES[ocrIndex], VISILS_CRO_INSTANCES[ocrIndex], OP_INSTANCES[opIndex]);
		handleInstance(instance, 30, 20, ILS_CRO_INSTANCES[ocrIndex+1], VISILS_CRO_INSTANCES[ocrIndex+1], OP_INSTANCES[opIndex]);
		handleInstance(instance, 30, 40, ILS_CRO_INSTANCES[ocrIndex+2], VISILS_CRO_INSTANCES[ocrIndex+2], OP_INSTANCES[opIndex]);
	}
	
	/**
	 * Runs the analysis for an instance under optimization constraints
	 */
	private void handleInstance(Instance instance, int budgetFactor, int riskImportance, String bestILS, String bestVISILS, String bestProfit)
	{
		MaximumValuesList maximumValues = new MaximumValuesReader().execute();
		MaximumValues values = maximumValues.getMaximumValues(instance, budgetFactor);

		RequirementReader reader = new RequirementReader();
		Project project = reader.execute(instance);

		int availableBudget = (int) (project.getTotalCost() * (budgetFactor / 100.0));
		CostRiskFitnessCalculator ocrCalculator = new CostRiskFitnessCalculator(project, availableBudget, riskImportance, values.getMaximumProfit(), values.getMaximumCostRisk());
		
		Solution solutionBestILS = new Solution(project);
		solutionBestILS.fromString(bestILS);
		double fitnessILS = ocrCalculator.evaluate(solutionBestILS);
		double profitILS = project.calculateProfit(solutionBestILS.getSolution());
		double riskILS = project.calculateCostRisk(solutionBestILS.getSolution());
		
		Solution solutionBestVISILS = new Solution(project);
		solutionBestVISILS.fromString(bestVISILS);
		double fitnessVISILS = ocrCalculator.evaluate(solutionBestVISILS);
		double profitVISILS = project.calculateProfit(solutionBestVISILS.getSolution());
		double riskVISILS = project.calculateCostRisk(solutionBestVISILS.getSolution());
		
		Solution solutionBestProfit = new Solution(project);
		solutionBestProfit.fromString(bestProfit);
		double fitnessProfit = ocrCalculator.evaluate(solutionBestProfit);
		double profitProfit = project.calculateProfit(solutionBestProfit.getSolution());
		double riskProfit = project.calculateCostRisk(solutionBestProfit.getSolution());
		
		System.out.print(instance.name() + "\t" + budgetFactor + "\t" + riskImportance + "\t");
		System.out.print(fitnessILS + "\t" + profitILS + "\t" + riskILS + "\t");
		System.out.print(fitnessVISILS + "\t" + profitVISILS + "\t" + riskVISILS + "\t");
		System.out.print(fitnessProfit + "\t" + profitProfit + "\t" + riskProfit + "\n");
	}
}